# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: node:latest

stages:          # List of stages for jobs, and their order of execution
  - install
  - build
  - deploy

cache:
  paths:
    - node_modules/

install-job:
  stage: install
  tags:
    - fuyinv1
  script:
    - echo "开始install🔥🔥🔥"
    - npm config set registry https://registry.npm.taobao.org
    - npm install
    - echo "完成install🔥🔥🔥"
  only:
    - develop
  artifacts:
    paths:
      - dist/

build-job:
  stage: build
  only:
    - develop
  script:
    - echo "开始打包🔥🔥🔥"
    - npm run build
    - echo "开始打包🔥🔥🔥"

deploy-job: 
    stage: deploy
    only: 
      - develop
    script:
      - echo "发送到目标服务器🔥🔥🔥"
      - sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no -r ./dist $USERNAME@$HOST:$UPLOADDIR/   # 将打包完成的文件复制到目标服务器
      - sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$HOST rm -rf $UPLOADDIR/xxxx # 删除原有文件
      - sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$HOST mv $UPLOADDIR/dist $UPLOADDIR/xxxx # 将目标文件改为服务端真正文件。
    after_script:
      - echo "完成更新🔥🔥🔥"
